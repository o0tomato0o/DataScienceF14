{
    "contents" : "# aes_string is used below, its usage is:\n#    aes_string(...) \n# Arguments\n#    ...    which is a list of name value pairs.\n\nFigureNum <<- 0 # Global variable\n\nggplot_func <- function(df,\n  Title = \"Diamonds\",\n  Legend = \"color\",   # Notice how this is handled below using the aes_string() function\n  PointColor = c(\"red\", \"blue\", \"green\", \"yellow\", \"grey\", \"black\", \"purple\"), # See https://groups.google.com/forum/#!forum/ggplot2 for color choices.\n  Sizes = c(.5,.5,.5,.5,.5,.5,.5,.5),\n  AxisSize = 12,\n  TitleSize = 16,\n  LegendSize = 14,\n  YMin = 0,\n  YMax = max(df$price) * 1.1,\n  XMin = 0,\n  XMax = max(df$carat) * 1.1,\n  YLabel = 'price',\n  XLabel = 'carat',\n  Background = \"grey97\",\n  MinorGridColor = \"snow2\",\n  MajorGridColor = \"snow3\",\n  MinorGridSize = .5,\n  MajorGridSize = .5,\n  FigNum = -1,\n  FigNumOffset = 0\n) {\n  \n    if(FigNum != -1) FigNum = FigNum\n    else FigNum = {\n      FigureNum <<- FigureNum + 1\n    }\n    \n    p1 = ggplot(df, aes(x = carat, y = price)) + \n    geom_point(aes_string(color = Legend)) + \n    scale_colour_manual(values = PointColor) + # See http://docs.ggplot2.org/0.9.3.1/scale_manual.html for more information.\n    labs(y = YLabel, x = paste(XLabel, '\\nFigure', toString(FigNumOffset + FigNum)), title=Title) +\n    ylim(YMin, YMax) + xlim(XMin, XMax) + \n    scale_x_continuous(breaks=c(seq(XMin,XMax,by=1)), minor_breaks=seq(XMin,XMax,by=1))  + \n    # theme is now used, see http://docs.ggplot2.org/0.9.2.1/theme.html for more information.\n    theme(legend.text = element_text(size = LegendSize, face = \"bold\")) + # see http://www.cookbook-r.com/Graphs/Legends_(ggplot2) for more information.\n    theme(axis.text=element_text(size=12), axis.title=element_text(size=AxisSize,face=\"bold\")) +\n    theme(plot.title = element_text(size=TitleSize,face=\"bold\")) +\n    theme(panel.grid.major = element_line(colour=MajorGridColor, size=MajorGridSize)) +\n    theme(panel.grid.minor = element_line(colour=MinorGridColor, size=MinorGridSize)) +\n    theme(panel.background = element_rect(fill=Background, colour=Background))\n    \n    return(p1)\n}\n\np1 <- ggplot_func(diamonds)\np1\np2 <- ggplot_func(diamonds, YMin = 5000, YMax = 15000)\np2\np3 <- ggplot_func(subset(diamonds, cut == \"Premium\"), Legend = \"cut\")\np3\np4 <- ggplot_func(diamonds, Legend = \"clarity\", PointColor = c(\"red\", \"blue\", \"green\", \"yellow\", \"grey\", \"black\", \"purple\", \"orange\"))\np4\n\nlibrary(\"grid\", lib.loc=\"/Library/Frameworks/R.framework/Versions/3.0/Resources/library\")\n\npng(\"4diamonds.png\", width = 25, height = 20, units = \"in\", res = 72)\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(2, 2)))   \n\n# Print IPoIB Plots\nprint(p1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))  \nprint(p2, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))\nprint(p3, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))  \nprint(p4, vp = viewport(layout.pos.row = 2, layout.pos.col = 2)) \n\ndev.off()\n",
    "created" : 1410646416440.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "957027253",
    "id" : "9E490435",
    "lastKnownWriteTime" : 1409695755,
    "path" : "~/Desktop/datascience/proj1/DataScienceF14/03 ggplot/plotFunction.R",
    "project_path" : "03 ggplot/plotFunction.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}